services:

  db:
    image: mongo:latest
    command: mongod --quiet --bind_ip 0.0.0.0 --logpath /dev/null  # Makes mongo shut the fuck up bc it is so obnoxious
    # Use this command instead if you are having authentication issues.
    # It is not recommended, but as long as you are NOT exposing any ports, it is mostly safe in non-production environments.
#    command: mongod --noauth --bind_ip 0.0.0.0
    container_name: db
    environment:
      - MONGO_INITDB_DATABASE=admin
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ROOT_PASSWORD
    # Only expose ports if you NEED to externally access the database.
#    ports:  # Use for windows
#      - "27017:27017"
#    ports: # Use for linux
#      - "127.0.0.1:27017:27017"
    volumes:
      - ./database:/data/db
    restart: unless-stopped
    mem_reservation: 512m

  astron:
    depends_on:
      - db
    build:
      context: ../..
      dockerfile: launch/docker/astron.dockerfile
    platform: linux/amd64 # Force x64 on ARM platforms.
    restart: always
    ports:
      - "7198:7198"
    volumes:
      - "../..:/app/game"

  uberdog:
    depends_on:
      - astron
    image: ttap-server
    pull_policy: never # Hack to prevent building the same image twice
    build:
      context: ../..
      dockerfile: launch/docker/server.dockerfile
    platform: linux/amd64 # Force x64 on ARM platforms.
    restart: always
    ports:
      - "8080:8080"
    environment:
      SERVICE_TO_RUN: UD
      BASE_CHANNEL: 1000000
      MAX_CHANNELS: 999999
      STATESERVER: 4002
      ASTRON_IP: astron:7199
      EVENTLOGGER_IP: astron:7197
      MONGO_ROOT_USERNAME: $MONGO_ROOT_USERNAME
      MONGO_ROOT_PASSWORD: $MONGO_ROOT_PASSWORD
      AUTHENTICATION_SCHEME: $AUTHENTICATION_SCHEME
      DISCORD_APP_CLIENT_ID: $DISCORD_APP_CLIENT_ID
      DISCORD_APP_CLIENT_SECRET: $DISCORD_APP_CLIENT_SECRET
      DISCORD_APP_CLIENT_REDIRECT: $DISCORD_APP_CLIENT_REDIRECT
      WANT_ERROR_REPORTING: true  # Reports errors to the sentry service for TT:AP
    volumes:
      - "../..:/app"

  ai:
    depends_on:
      - astron
      - uberdog
    image: ttap-server
    pull_policy: never # Hack to prevent building the same image twice
    platform: linux/amd64 # Force x64 on ARM platforms.
    restart: always
    environment:
      SERVICE_TO_RUN: AI
      BASE_CHANNEL: 401000000
      MAX_CHANNELS: 999999
      STATESERVER: 4002
      ASTRON_IP: astron:7199
      EVENTLOGGER_IP: astron:7197
      DISTRICT_NAME: "Ranked Realms"
      WANT_ERROR_REPORTING: true  # Reports errors to the sentry service for TT:AP
      ARCHIPELAGO_IP: 172.17.0.1  # by default assume that archipelago is running on the same machine
    volumes:
      - "../..:/app"
